<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-12-13 at 11:05:44.
 *
 * *** NOTE ****
 * These tests should be run against the neustartest.service-now.com instance, as they reference specific Hashes
 */
include "../php/global.php";



class CMDBRelatedImpactedServiceTest extends PHPUnit_Framework_TestCase
{
	public static function setUpBeforeClass(){
		// read the config file
		$config = require("config.php");
		$instance = $config->servicenow->site;
		print "ServiceNow Instance: {$instance}\n";
	}

    /**
     * @var CMDBRelatedImpactedService
     */
    protected $object;
	protected $CRsys_id;
	protected $subSystemSysId;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CMDBRelatedImpactedService;
	    // below is the sys_id for CHG0014014
	    $this->CRsys_id = "45d63bd8949e7c0010911c64328a9e2c";
	    // The SubSystem sys_id name is for "IT Tools LAMP"
	    $this->subSystemSysId = "2c32dd2a99e93000ad50086852dd80bc";
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers CMDBRelatedImpactedService::getByCRId
     * @todo   Implement testGetByCRId().
     */
    public function testGetByCRId()
    {
	    $subSystems = $this->object->getByCRId($this->CRsys_id);
	    $this->assertEquals(7, count($subSystems), "This CR ( CHG0014014 ) on neustartest has 7 SubSystems");
    }

    /**
     * @covers CMDBRelatedImpactedService::create
     */
    public function testCreate()
    {
		// test the legacy code which uses the old u_service subsystem variable.
	    // The sys_id name is "IT Tools LAMP"
		$this->object->set('u_service', $this->subSystemSysId);
		$this->object->set('u_change', $this->CRsys_id);
		$this->object->create();

	    list($foundTF, $RISSysId) = $this->findElement('u_service', $this->subSystemSysId);
	    $this->assertTrue($foundTF, "We've found the SubSystem via the old u_service we just attempted to insert via the old method");

	    list($foundTF, $RISSysId) = $this->findElement('u_cmdb_subsystem', $this->subSystemSysId);
	    $this->assertTrue($foundTF, "We've found the SubSystem via the new u_cmdb_subsystem we just attempted to insert via the old method");

	    $this->object->set('sys_id', $RISSysId);
	    $this->object->delete();
    }

	private function findElement($element, $value){
		$CRs = $this->object->getByCRId($this->CRsys_id);
		$found_element = false;
		$RISSysId = '';

		foreach ($CRs as $CR){

			if($CR->get($element) == $this->subSystemSysId){
				$found_element = true;
				$RISSysId = $CR->get('sys_id');
			}
		}
		return array($found_element, $RISSysId) ;
	}


    /**
     * @covers CMDBRelatedImpactedService::createMultiple
     * @todo   Implement testCreateMultiple().
     */
    public function testCreateMultiple()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::update
     * @todo   Implement testUpdate().
     */
    public function testUpdate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::delete
     * @todo   Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::deleteMultiple
     * @todo   Implement testDeleteMultiple().
     */
    public function testDeleteMultiple()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::updateByJson
     * @todo   Implement testUpdateByJson().
     */
    public function testUpdateByJson()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::__call
     * @todo   Implement test__call().
     */
    public function test__call()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::get
     * @todo   Implement testGet().
     */
    public function testGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::set
     * @todo   Implement testSet().
     */
    public function testSet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::__toString
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::toObject
     * @todo   Implement testToObject().
     */
    public function testToObject()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers CMDBRelatedImpactedService::explode
     * @todo   Implement testExplode().
     */
    public function testExplode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
